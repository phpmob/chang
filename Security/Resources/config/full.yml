parameters:
    chang.packages.security.reserved_word:
        enabled: true
        words: []
    chang.packages.security.password_strength:
        algorithm: zxcvbn
        score: 1
        options: []

services:
    Chang\Security\Form\Type\SimpleRegistrationType:
        tags: [ form.type ]

    chang.security.reserved_word_provider:
        class: Chang\Security\Validator\ReservedWord\WordProvider
        arguments:
            - '@=service("chang.option_resolver").get("security.reserved_word.words")'

    Chang\Security\Validator\ReservedWord\ConstraintValidator:
        tags: [{ name: validator.constraint_validator, alias: reserved_word_validator }]
        arguments:
            - '@=service("chang.option_resolver").get("security.reserved_word.enabled")'
            - '@chang.security.reserved_word_provider'

    Chang\Security\Validator\PasswordStrength\ConstraintValidator:
        tags: [{ name: validator.constraint_validator, alias: password_strength_validator }]
        arguments:
            - '@=service("chang.option_resolver").get("security.password_strength.algorithm")'
            - '@=service("chang.option_resolver").get("security.password_strength.score")'
            - '@=service("chang.option_resolver").get("security.password_strength.options")'

    chang.controller.security:
        public: true
        class: Chang\Security\Controller\SecurityController
        arguments:
            - '@security.authentication_utils'
            - '@form.factory'
            - '@templating'
            - '@security.authorization_checker'
            - '@router'

framework:
    translator:
        paths:
            - '%chang.dir%/Security/Resources/translations'
    validation:
        mapping:
            paths:
                - '%chang.dir%/Security/Resources/config/validation'
